let mapleader = "_"               "Define the leader character for additional functions
filetype off


call plug#begin('~/.vim/plugged')
Plug 'itchyny/lightline.vim'                         " Status bar lighter than airline
Plug 'arcticicestudio/nord-vim'                      " Make nord theme available
Plug 'altercation/vim-colors-solarized'              " Solarized theme
Plug 'ghifarit53/tokyonight-vim'                     " Tokyonight theme options night storm
Plug 'Valloric/YouCompleteMe'
Plug 'davidhalter/jedi-vim'                          " Python auto-complete
Plug 'vim-scripts/indentpython.vim'                  " Python auto-indentation
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'} " NERDTree to explore directory
Plug 'tpope/vim-fugitive'                            " Git integration plugin
Plug 'tpope/vim-surround'                            " Complete the bracket
Plug 'tpope/vim-repeat'                              " maps . to repeat last command
" Plug 'tpope/vim-commentary'                        " comment multiple lines, paragraphs or sections by using 'gc'
Plug 'airblade/vim-gitgutter'                        " Highlight the lines modified from the git pushed version
Plug 'preservim/nerdcommenter'
Plug 'bronson/vim-trailing-whitespace'                          " Mark as incorrect any space
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " Fuzzy finder for files command :Files
Plug 'junegunn/fzf.vim'                                         "Counter part for fzf
Plug 'ryanoasis/vim-devicons'
Plug 'godlygeek/tabular'

call plug#end()

set nocompatible                "set compatibility with old vi to none, required fro many other options

set encoding=utf-8              "set the codification used in the files

set backspace=indent,eol,start  "allow backspacing over everything in insert mode

set history=50                  "keep 50 lines of command line history

set ruler                       "show the cursor position all the time

set encoding=utf-8              "Ensure the compatibility of the file save with non-ANSI characters

set showcmd                     "display incomplete commands

set incsearch                   "do incremental searching

set number relativenumber       "show line numbers

set mouse=a                     "Do not select the number lines with the mouse

set expandtab                   "use spaces instead of tabs

set fileformat=unix             " Sure that the file have a proper format

set tabstop=4                   "insert 4 spaces whenever the tab key is pressed

set shiftwidth=4                "set indentation to 4 spaces

set hlsearch                    "highlight search terms

set ic                          "Ignore Case during searches

set autoindent                  "start new line at the same indentation level

:syntax on                       "syntax highlighting

set cmdheight=1                 "The commandbar height

set showmatch                   "Show matching bracets when text indicator is over them

set nobackup                    " do not keep backup files, it's 70's style cluttering

set noswapfile                  " do not write annoying intermediate swap files,

set ttimeoutlen=50              "Solves: there is a pause when leaving insert mode

set splitbelow                  " Horizontal splits open below current file

set splitright                  " Vertical splits open to the right of the current file

set wildmode=longest,list,full  " Pressing <Tab> shows command suggestions similar to pressing <Tab>
                                " in bash
set nohlsearch                  "set highlight in searches off

set clipboard=unnamedplus       "share the clipboard of the XWindows

"remove the default behavior that any change is copied in the default registry
nnoremap c "_c
"nnoremap d "_d

" Disables automatic commenting on newline:
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Setup theme
"colorscheme nord
"let g:solarized_termcolors=256
"if has('gui_running')
"    colorscheme solarized
"    set background=light
"else
"    colorscheme solarized
"    set background=dark
"endif
"call togglebg#map("<F5>")

" Enable folding
"set foldmethod=indent
" set foldlevel=99
" nnoremap <space> za
" let g:SimpylFold_docstring_preview=1

"Powerline setup
"let g:airline_theme='powerlineish'
"set rtp+=/usr/local/lib/python3.7/dist-packages/powerline/bindings/vim/
set laststatus=2
"set t_Co=256

set termguicolors

let g:tokyonight_style = 'storm' " available: night, storm
let g:tokyonight_enable_italic = 0

colorscheme tokyonight

set noshowmode
let g:lightline = {
      \ 'colorscheme': 'tokyonight',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'FugitiveHead'
      \ },
      \ }


nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"FZF
map <C-f> <Esc><Esc>:Files!<CR>
inoremap <C-f> <Esc><Esc>:Blines!<CR>
map <C-g> <Esc><Esc>:BCommits!<CR>

"NERDTree defining the shortcut
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Copy selected text to system clipboard (requires gvim/nvim/vim-x11 installed):
vnoremap <C-c> "+y
map <C-p> "+P

" Automatically deletes all trailing whitespace on save.
autocmd BufWritePre * %s/\s\+$//e

"Git Gutter
set updatetime=500

" Spell-check ]s and [s to move between mistakes z= for suggestions, zg, zug, zw, zuw:
map <leader>o :setlocal spell! spelllang=en_gb<CR>
map <F6> :setspelllang=en_us<CR>
map <F7> :set spelllang=es<CR>

" Ensure files are read as what I want:
autocmd BufRead,BufNewFile *.py set filetype=python
autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd BufRead,BufNewFile *.tex set filetype=tex

" Compile document, be it groff/LaTeX/markdown/etc.
map <leader>c :w! \| !compiler <c-r>%<CR>

" Open corresponding .pdf/.html or preview
map <leader>p :!opout <c-r>%<CR><CR>

"""LATEX
	" Word count:
	autocmd FileType tex map <leader>w :w !detex \| wc -w<CR>
